;                      -*- Mode: Outline -*-
; NEWS
; Copyright © 2000-04 Laboratoire de Biologie Informatique et Théorique.
;                  Université de Montréal.
; Author           : Martin Larose
; Created On       : Tue Sep 19 18:15:25 2000
; $Revision: 1.6 $
; $Id: NEWS,v 1.6 2004-01-29 21:42:06 larosem Exp $

* Version 1.4

Redesign of almost all the classes.
- PropertyType B (Bifurcated) was removed.
- PropertyType Bh and Bs inherits directly from PropertyType.
- Using standard C++ headers.
- Vector3D and HomogeneousTransfo are not compliant with standard
mathematical convention (i.e. concerning the order of application of
operations).
- Using Basic residue that is as small in memory as possible.
- Elimination of the McCore file and all global variables as well as
the need to initialize the library in every program.
- Parsing some of the PDB headers.
- Atom, residue types have been recoded and the hierarchy adapted to
the need to have residue type wildcards.
- Rmsd algo now has its own class.
- HBonds are simplified.
- Graphs (directed or undirected) are now templated and thus can be
used to store any types of nodes and edges (special care was taken not
to copy nodes and edges when not need in algorithms). They are also
part of a hierarchy.
- All annotation code is now part of mccore.
- All motif related code is now part of mccore.


* Version 1.3

The library must link with librnamlc++ to enable rnaml reader and writer
classes.

New stream classes.  For compatibility with GCC 3 and the most recent
C++ standard library, all stream classes have been recoded.

* Version 1.2

New Residue classes.  An abstract residue has been created to get the
possibility to use different kind of models.  The abstract class contains a
CResId, a residue type, a CTransfo and the iterators.  To implement a new
residue and use it in a model, create an implementation of
ResidueFactoryMethod and set it in the model constructor.

New Model class.  It stores pointers over AbstractResidues.  Its methods
and iterators returns AbstractResidues pointers and references.

New ResidueFactoryMethod abstract class.  It defines an interface for
creating residues of a given type inside models.  It's only method,
createResidue returns a new residue pointer for the implemented residue
class.  It is mainly used in the Model read methods.
