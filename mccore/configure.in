#                              -*- Mode: Sh -*- 
# configure.in
# Copyright © 2000-03 Laboratoire de Biologie Informatique et Théorique.
#                     Université de Montréal.
# Author           : Martin Larose
# Created On       : Tue Sep 19 18:21:58 2000
# $Revision: 1.14.8.8 $
# $Id: configure.in,v 1.14.8.8 2003-12-05 19:58:44 larosem Exp $
# 
# This file is part of mccore.
# 
# mccore is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
# 
# mccore is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
# 
# You should have received a copy of the GNU Lesser General Public
# License along with mccore; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA


dnl Process this file with autoconf to produce a configure script.


AC_INIT(lib/McCore.h)
AC_CONFIG_HEADER(config.h)

PACKAGE=mccore
VERSION=1.3
AC_DEFINE_UNQUOTED(PACKAGE, "$PACKAGE")
AC_DEFINE_UNQUOTED(VERSION, "$VERSION")

AC_PROG_MAKE_SET

AC_C_BIGENDIAN
AC_PROG_CXX
AC_LANG(C++)
AC_CANONICAL_HOST

AC_PROG_INSTALL
AC_PATH_PROG(AR,ar)
AC_CHECK_FUNCS(strsep)
AC_CHECK_FUNCS(isfdtype)
AC_CHECK_FUNCS(acosf)
AC_CHECK_FUNCS(sqrtf)

AC_MSG_CHECKING(for fstreambase)
AC_CACHE_VAL(ac_cv_have_fstreambase,
             AC_TRY_COMPILE([#include <fstream>],
                            fstreambase f;, 
                            ac_cv_have_fstreambase="yes", 
                            ac_cv_have_fstreambase="no"))
if test $ac_cv_have_fstreambase = "yes"; then
    AC_DEFINE(HAVE_FSTREAMBASE)
fi
AC_MSG_RESULT($ac_cv_have_fstreambase)

if eval "test -z \"`echo $GXX`\""; then # not gnu compiler
    case "$host" in
    *-sgi-*)
	CXXFLAGS="$CXXFLAGS -O2 -LANG:std"
  	DEPFLAGS="-M"
	echo "appending values of CPLUS_INCLUDE_PATH to include path..."
	for t in `echo $CPLUS_INCLUDE_PATH | sed "s/\.*:/ /g"`; do
	  CXXFLAGS="$CXXFLAGS -I$t"
 	  DEPFLAGS="$DEPFLAGS -I$t"
	  echo "        " $t;
	done
  	LINKOPTIONS="-shared"
	LDNAMEPARAM="-Wl,-soname,"
	echo "appending values of LIBRARY_PATH to lib path..."
	for t in `echo $LIBRARY_PATH | sed "s/\.*:/ /g"`; do
	  LDFLAGS="$LDFLAGS -L$t";   
	  echo "        " $t;
	done
	AC_CHECK_LIB(z,gzopen)
	AC_CHECK_LIB(rnamlc++,xmlcpginit)
	LIBALLFLAGSTART="-all"
	LIBALLFLAGSTOP="-notall"
	ARXX="$AR"
	AROPTIONS="crs"
	;;	
    *-sun-*)
	CXXFLAGS="$CXXFLAGS -xO2"
	DEPFLAGS="-xM"
	echo "appending values of CPLUS_INCLUDE_PATH to include path..."
	for t in `echo $CPLUS_INCLUDE_PATH | sed "s/\.*:/ /g"`; do
	  CXXFLAGS="$CXXFLAGS -I$t"
 	  DEPFLAGS="$DEPFLAGS -I$t"
	  echo "        " $t;
	done
	LINKOPTIONS="-G"
	LDNAMEPARAM="-h"
	echo "appending values of LIBRARY_PATH to lib path..."
	for t in `echo $LIBRARY_PATH | sed "s/\.*:/ /g"`; do
	  LDFLAGS="$LDFLAGS -L$t";   
	  echo "        " $t;
	done
	AC_CHECK_LIB(z,gzopen)
	AC_CHECK_LIB(rnamlc++,xmlcpginit)
	LIBALLFLAGSTART="-z allextract"
	LIBALLFLAGSTOP="-z defaultextract"
	ARXX="$CXX"
	AROPTIONS="-xar -o"
	;;
    esac;
elif eval "test \"`echo $GXX`\" = yes"; then     # gnu compiler
        AC_CHECK_LIB(z,main)
        AC_CHECK_LIB(rnamlc++,main)
	CXXFLAGS="$CXXFLAGS -Wall"
	DEPFLAGS="-MM"
	LINKOPTIONS="-shared"
	LDNAMEPARAM="-Wl,-soname,"
	LIBALLFLAGSTART="-Wl,-whole-archive"
	LIBALLFLAGSTOP="-Wl,-no-whole-archive";
	ARXX="$AR"
	AROPTIONS="crs"
fi


AC_ARG_WITH(malloc,
[  --with-malloc           replace STL allocator with malloc],
AC_DEFINE(__USE_MALLOC),
)

AC_SUBST(PACKAGE)
AC_SUBST(VERSION)
AC_SUBST(DEPFLAGS)
AC_SUBST(LINKOPTIONS)
AC_SUBST(LDNAMEPARAM)
AC_SUBST(LDFLAGS)
AC_SUBST(LIBALLFLAGSTART)
AC_SUBST(LIBALLFLAGSTOP)
AC_SUBST(ARXX)
AC_SUBST(AROPTIONS)

AC_OUTPUT( Makefile docs/Makefile lib/Makefile, echo timestamp > stamp-h )
