;;;;;;;;;;;;;;;;;;;;;;;;;;;;; -*- Mode: Outline -*- ;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; NEWS
;; Copyright © 2000-02 Laboratoire de Biologie Informatique et Théorique.
;;                  Université de Montréal.
;; Author           : Martin Larose
;; Created On       : Tue Sep 19 18:15:25 2000
;; Last Modified By : Patrick Gendron
;; Last Modified On : Mon Feb 25 11:35:37 2002
;; Update Count     : 4
;; Status           : Ok.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


* Version 1.3

New stream classes.  For compatibility with GCC 3 and the most recent
C++ standard library, all stream classes have been recoded.

* Version 1.2

New Residue classes.  An abstract residue has been created to get the
possibility to use different kind of models.  The abstract class contains a
CResId, a residue type, a CTransfo and the iterators.  To implement a new
residue and use it in a model, create an implementation of
ResidueFactoryMethod and set it in the model constructor.

New Model class.  It stores pointers over AbstractResidues.  Its methods
and iterators returns AbstractResidues pointers and references.

New ResidueFactoryMethod abstract class.  It defines an interface for
creating residues of a given type inside models.  It's only method,
createResidue returns a new residue pointer for the implemented residue
class.  It is mainly used in the Model read methods.